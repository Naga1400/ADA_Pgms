#include <stdio.h>
#include <stdlib.h>

void merge(int *a, int l, int mid, int r);
void mergeSort(int *a, int l, int r);

int main() {
    int n;
    printf("Enter n:\n");
    scanf("%d", &n);

    int a[n];
    printf("Enter array elements:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    mergeSort(a, 0, n - 1);

    printf("Array after sorting:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");

    return 0;
}

void mergeSort(int *a, int l, int r) {
    if (l < r) {
        int mid = (l + r) / 2;
        mergeSort(a, l, mid); 
        mergeSort(a, mid + 1, r);
        merge(a, l, mid, r);
}

void merge(int *a, int l, int mid, int r) {
    int n1 = mid - l + 1;
    int n2 = r - mid;

    int a1[n1], a2[n2];

    for (int i = 0; i < n1; i++) {
        a1[i] = a[l + i];
    }
    for (int j = 0; j < n2; j++) {
        a2[j] = a[mid + 1 + j];
    }

    int i = 0, j = 0, k = l;
    
    while (i < n1 && j < n2) {
        if (a1[i] <= a2[j]) {
            a[k] = a1[i];
            i++;
        } else {
            a[k] = a2[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        a[k] = a1[i];
        i++;
        k++;
    }

    while (j < n2) {
        a[k] = a2[j];
        j++;
        k++;
    }
}
